# yaml-language-server: $schema=https://raw.githubusercontent.com/prefix-dev/recipe-format/main/schema.json

context:
  name: nmlib
  build_number: 0

recipe:
  name: nmlib-split

source:
  - path: ..
    use_gitignore: true

build:
  number: ${{ build_number }}

outputs:
  ################################################################################################
  # nm_a
  - package:
      name: ${{ load_from_file("nm_a/pyproject.toml").project.name }}
      version: ${{ load_from_file("nm_a/pyproject.toml").project.version }}
    build:
      noarch: python
      script: |
        cd nm_a
        python -m pip install . --no-deps --ignore-installed --no-build-isolation
    requirements:
      host:
        - pip
        - setuptools
    tests:
      - script:
          - pytest -vvs nm_a/tests
        files:
          source:
            - nm_a/pyproject.toml
            - nm_a/tests/
        requirements:
          run:
            - pytest

  ################################################################################################
  # nm_b
  - package:
      name: ${{ load_from_file("nm_b/pyproject.toml").project.name }}
      version: ${{ load_from_file("nm_b/pyproject.toml").project.version }}
    build:
      noarch: python
      script: |
        cd nm_b
        python -m pip install . --no-deps --ignore-installed --no-build-isolation
    requirements:
      host:
        - pip
        - setuptools
      run:
        - ${{ pin_subpackage('nm_a') }}
    tests:
      - script:
          - pytest -vvs nm_b/tests
        files:
          source:
            - nm_b/pyproject.toml
            - nm_b/tests/
        requirements:
          run:
            - pytest

  ################################################################################################
  # nm_c
  - package:
      name: ${{ load_from_file("nm_c/pyproject.toml").project.name }}
      version: ${{ load_from_file("nm_c/pyproject.toml").project.version }}
    build:
      script: |
        export PYTHONDONTWRITEBYTECODE=1
        cd nm_c
        python -m pip install . --no-deps --ignore-installed --no-build-isolation
    requirements:
      build:
        - ${{ compiler('cxx') }}
        - cmake >=3.15
        - ninja
      host:
        - pip
        - setuptools
        - scikit-build-core
        - pybind11
        - numpy
      run:
        - ${{ pin_compatible('numpy') }}
        - ${{ pin_subpackage('nm_a') }}
    tests:
      - script:
          - pytest -vvs nm_c/tests
        files:
          source:
            - nm_c/pyproject.toml
            - nm_c/tests/
        requirements:
          run:
            - pytest